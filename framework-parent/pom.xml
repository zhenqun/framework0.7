<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.5.RELEASE</version>
    </parent>

    <groupId>com.fosung.framework</groupId>
    <artifactId>framework-parent</artifactId>
    <version>0.7-SNAPSHOT</version>
        <packaging>pom</packaging>

    <properties>
        <spring-cloud.version>Finchley.RELEASE</spring-cloud.version>

        <framework.version>0.7-SNAPSHOT</framework.version>
        <!--java版本号，通过配置maven-compiler-plugin插件，影响ide的编译版本-->
        <java.version>1.8</java.version>
        <!--源码的编码方式-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--spring移动端设置的支持-->
        <spring-mobile-device.version>1.1.5.RELEASE</spring-mobile-device.version>

        <!--阿里资源配置-->
        <ali.fastjson.version>1.2.5</ali.fastjson.version>

        <commons.fileupload.version>1.2.2</commons.fileupload.version>
        <commons-lang3.version>3.2.1</commons-lang3.version>
        <commons-beanutils.version>1.9.3</commons-beanutils.version>

        <guava.version>25.1-jre</guava.version>

        <hessian.version>4.0.51</hessian.version>

        <druid.version>1.1.10</druid.version>
        <postgresql.version>42.2.25</postgresql.version>

        <!-- mybatis版本号 -->
        <mybatis.version>3.4.0</mybatis.version>
        <mybatis-spring.version>1.3.0</mybatis-spring.version>
        <mysql-connector-java.version>5.1.42</mysql-connector-java.version>

        <!--easypoi版本-->
        <easypoi.version>3.2.0</easypoi.version>

        <!--docker 容器相关-->
        <!--<docker.repository>hub.fosung.com</docker.repository>-->
        <docker.repository>registry.cn-qingdao.aliyuncs.com</docker.repository>
        <docker.image.jar>${project.build.finalName}.jar</docker.image.jar>
        <docker.image.file.directory>${project.basedir}/src/main/docker</docker.image.file.directory>
        <docker.image.prefix>hub_fosung</docker.image.prefix>
        <docker.image.name>${project.artifactId}</docker.image.name>
        <docker.image.tag>${project.version}</docker.image.tag>
        <docker.base.java>${docker.repository}/library/jdk8:8u111</docker.base.java>
        <docker.base.jar>${docker.repository}/library/jar:1.8.1</docker.base.jar>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!--spring cloud的依赖支持-->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework.mobile</groupId>
                <artifactId>spring-mobile-device</artifactId>
                <version>${spring-mobile-device.version}</version>
            </dependency>

            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${ali.fastjson.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <!--文件上传-->
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons.fileupload.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>

            <dependency>
                <groupId>com.caucho</groupId>
                <artifactId>hessian</artifactId>
                <version>${hessian.version}</version>
            </dependency>

            <!--数据库连接池-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>

            <!-- mybatis start -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis-spring</artifactId>
                <version>${mybatis-spring.version}</version>
            </dependency>
            <!-- mybatis end -->

            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>

            <!--反射帮助类-->
            <dependency>
                <groupId>org.reflections</groupId>
                <artifactId>reflections</artifactId>
                <version>0.9.11</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.6</version>
            </dependency>

            <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant</artifactId>
                <version>1.10.3</version>
            </dependency>

            <dependency>
                <groupId>oro</groupId>
                <artifactId>oro</artifactId>
                <version>2.0.8</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql-connector-java.version}</version>
            </dependency>

            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
            </dependency>

            <!--easypoi模块-->
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-base</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-web</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-annotation</artifactId>
                <version>${easypoi.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>2.6.1</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <!-- 项目构建插件 -->
    <build>
        <!-- 打包的项目名称 -->
        <finalName>${project.artifactId}</finalName>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.7.0</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <encoding>${project.build.sourceEncoding}</encoding>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>
                        </archive>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.1</version>
                    <configuration>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.1.0</version>
                    <configuration>
                        <finalName>${project.artifactId}-assembled</finalName>
                        <appendAssemblyId>false</appendAssemblyId>
                        <descriptors>
                            <descriptor>assembly.xml</descriptor>
                        </descriptors>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!--<plugin>-->
                    <!--<groupId>org.apache.maven.plugins</groupId>-->
                    <!--<artifactId>maven-antrun-plugin</artifactId>-->
                    <!--<version>1.8</version>-->
                    <!--<executions>-->
                        <!--<execution>-->
                            <!--<id>clean_docker_jar</id>-->
                            <!--<phase>clean</phase>-->
                            <!--<configuration>-->
                                <!--<tasks>-->
                                    <!--<delete file="${docker.image.file.directory}/${docker.image.jar}" />-->
                                <!--</tasks>-->
                            <!--</configuration>-->
                            <!--<goals>-->
                                <!--<goal>run</goal>-->
                            <!--</goals>-->
                        <!--</execution>-->
                        <!--<execution>-->
                            <!--<id>copy_jar2docker</id>-->
                            <!--<phase>package</phase>-->
                            <!--<configuration>-->
                                <!--<tasks>-->
                                    <!--<copy todir="${docker.image.file.directory}" overwrite="true">-->
                                        <!--<fileset dir="${project.build.directory}" erroronmissingdir="false">-->
                                            <!--<include name="${project.build.finalName}.jar"/>-->
                                        <!--</fileset>-->
                                    <!--</copy>-->
                                <!--</tasks>-->
                            <!--</configuration>-->
                            <!--<goals>-->
                                <!--<goal>run</goal>-->
                            <!--</goals>-->
                        <!--</execution>-->
                    <!--</executions>-->
                <!--</plugin>-->

                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>1.4.12</version>
                    <configuration>
                        <!--docker 镜像名称：仓库地址/景象名称:版本号-->
                        <repository>${docker.repository}/${docker.image.prefix}/${docker.image.name}</repository>
                        <googleContainerRegistryEnabled>false</googleContainerRegistryEnabled>
                        <contextDirectory>${project.build.directory}</contextDirectory>
                        <!--镜像版本号-->
                        <tag>${docker.image.tag}</tag>
                        <buildArgs>
                            <!--与dockerfile文件内容相呼应-->
                            <JAVA_BASE>${docker.base.java}</JAVA_BASE>
                            <JAR_BASE>${docker.base.jar}</JAR_BASE>
                            <JAR_FILE>${docker.image.jar}</JAR_FILE>
                        </buildArgs>
                        <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                    </configuration>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>build</goal>
                                <goal>push</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.plexus</groupId>
                            <artifactId>plexus-archiver</artifactId>
                            <version>3.4</version>
                        </dependency>
                        <dependency>
                            <groupId>javax.activation</groupId>
                            <artifactId>javax.activation-api</artifactId>
                            <version>1.2.0</version>
                        </dependency>
                    </dependencies>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- 每个项目必须配置source插件，所有的项目发布到私服时，带着源码 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.0.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <!-- 由于使用的rebel，在打包时删除jrebel文件 -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>rebel.xml</exclude>
                    <exclude>rebel-remote.xml</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/docker</directory>
                <targetPath>${project.build.directory}</targetPath>
            </resource>
            <resource>
                <directory>src/main/docker</directory>
                <targetPath>${project.build.directory}/docker-file</targetPath>
            </resource>
        </resources>
    </build>

    <repositories>
        <repository>
            <id>nexus</id>
            <name>nexus repository</name>
            <url>http://nexus.fosung.com:8081/nexus/content/groups/jar-all/</url>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>always</updatePolicy>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>nexus</id>
            <name>Team Nexus Repository</name>
            <url>http://nexus.fosung.com:8081/nexus/content/groups/jar-all/</url>
        </pluginRepository>
    </pluginRepositories>
    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Nexus Release Repository</name>
            <url>http://nexus.fosung.com:8081/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>snapshot</id>
            <name>Nexus snapshot Repository</name>
            <url>http://nexus.fosung.com:8081/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <profiles>
        <!--构建jar包和docker镜像-->
        <profile>
            <id>jar-docker</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!--jar包构建-->
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>

                    <!--docker构建。!!!!!!docker构建插件放到所有插件最后!!!!!!-->
                    <plugin>
                        <groupId>com.spotify</groupId>
                        <artifactId>dockerfile-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--只构建jar包-->
        <profile>
            <id>jar</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>